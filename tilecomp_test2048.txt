--------------------------------------------------------------------------------
I1 cache:         65536 B, 64 B, 8-way associative
D1 cache:         32768 B, 64 B, 8-way associative
LL cache:         35651584 B, 64 B, 17-way associative
Command:          ./tilecomposite test2048.png test2048.png 5
Data file:        cachegrind.out.1194637
Events recorded:  Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw
Events shown:     Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw
Event sort order: Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw
Thresholds:       0.1 100 100 100 100 100 100 100 100
Include dirs:     
User annotated:   
Auto-annotation:  on

--------------------------------------------------------------------------------
Ir                     I1mr           ILmr           Dr                   D1mr               DLmr           Dw                   D1mw               DLmw             
--------------------------------------------------------------------------------
3,229,451,139 (100.0%) 2,501 (100.0%) 2,313 (100.0%) 473,935,536 (100.0%) 5,008,765 (100.0%) 2,089 (100.0%) 122,075,809 (100.0%) 1,500,754 (100.0%) 521,878 (100.0%)  PROGRAM TOTALS

--------------------------------------------------------------------------------
Ir                     I1mr         ILmr         Dr                   D1mr               DLmr         Dw                  D1mw               DLmw              file:function
--------------------------------------------------------------------------------
1,908,562,130 (59.10%)   8 ( 0.32%)   8 ( 0.35%) 146,851,910 (30.99%) 2,621,456 (52.34%)  16 ( 0.77%) 20,971,565 (17.18%)         0                0           /vol/home/s3801322/Documents/CA/lab3materials-2024/lab3materials/tilecomposite.c:op_tile_composite
1,156,959,673 (35.83%) 470 (18.79%) 395 (17.08%) 279,737,690 (59.02%) 2,017,538 (40.28%)  76 ( 3.64%) 87,635,746 (71.79%)   348,272 (23.21%)     206 ( 0.04%)  ???:???
   85,739,978 ( 2.65%)  32 ( 1.28%)  27 ( 1.17%)  31,562,868 ( 6.66%)         0            0           3,249,580 ( 2.66%)         3 ( 0.00%)       0           ???:adler32_z
   66,713,288 ( 2.07%) 112 ( 4.48%) 100 ( 4.32%)  12,148,400 ( 2.56%)    70,248 ( 1.40%)   5 ( 0.24%)  6,832,272 ( 5.60%)    28,176 ( 1.88%)      13 ( 0.00%)  ???:inflate
    9,932,186 ( 0.31%)  10 ( 0.40%)  10 ( 0.43%)   3,206,408 ( 0.68%)   259,899 ( 5.19%) 126 ( 6.03%)  3,148,244 ( 2.58%) 1,120,086 (74.63%) 520,706 (99.78%)  ./string/../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S:__memcpy_avx_unaligned_erms

--------------------------------------------------------------------------------
-- Auto-annotated source: /vol/home/s3801322/Documents/CA/lab3materials-2024/lab3materials/tilecomposite.c
--------------------------------------------------------------------------------
Ir                   I1mr       ILmr       Dr                  D1mr               DLmr        Dw                  D1mw       DLmw       

-- line 13 ----------------------------------------
          .          .          .                   .                  .           .                   .          .          .           #include <stdio.h>
          .          .          .                   .                  .           .                   .          .          .           #include <stdlib.h>
          .          .          .                   .                  .           .                   .          .          .           #include <string.h>
          .          .          .                   .                  .           .                   .          .          .           #include <errno.h>
          .          .          .                   .                  .           .                   .          .          .           #include <assert.h>
          .          .          .                   .                  .           .                   .          .          .           
          .          .          .                   .                  .           .                   .          .          .           static inline const char *
          .          .          .                   .                  .           .                   .          .          .           get_basename(const char *str)
         20 ( 0.00%) 0          0                   0                  0           0                  10 ( 0.00%) 0          0           {
         20 ( 0.00%) 0          0                   0                  0           0                  10 ( 0.00%) 0          0             const char *end = strrchr(str, '/');
          .          .          .                   .                  .           .                   .          .          .             if (!end)
          .          .          .                   .                  .           .                   .          .          .               return str;
         40 ( 0.00%) 0          0                   0                  0           0                   0          0          0             return end + 1;
         20 ( 0.00%) 0          0                  20 ( 0.00%)         0           0                   0          0          0           }
          .          .          .                   .                  .           .                   .          .          .           
          .          .          .                   .                  .           .                   .          .          .           /* Tiles the @tile image over a diagonal on @background using alpha blending.
          .          .          .                   .                  .           .                   .          .          .            * For the tile an alpha value of @tile_alpha is used.
          .          .          .                   .                  .           .                   .          .          .            */
          .          .          .                   .                  .           .                   .          .          .           void
          .          .          .                   .                  .           .                   .          .          .           op_tile_composite(image_t * const background,
          .          .          .                   .                  .           .                   .          .          .                             const image_t * const tile, const float tile_alpha)
         35 ( 0.00%) 1 ( 0.04%) 1 ( 0.04%)          0                  0           0                  30 ( 0.00%) 0          0           {
         25 ( 0.00%) 0          0                  10 ( 0.00%)         1 ( 0.00%)  0                   5 ( 0.00%) 0          0             const int d_height = MIN(background->width, background->height);
          .          .          .                   .                  .           .                   .          .          .           
         35 ( 0.00%) 1 ( 0.04%) 1 ( 0.04%)          5 ( 0.00%)         0           0                   0          0          0             for (int d = 0; d < d_height; d += tile->height)
 21,032,995 ( 0.65%) 0          0          20,992,005 ( 4.43%)         0           0                   0          0          0               for (int y = d; y < d + tile->height; y++)
125,849,635 ( 3.90%) 1 ( 0.04%) 1 ( 0.04%) 20,971,525 ( 4.42%)         0           0                  10 ( 0.00%) 0          0                 for (int x = d; x < d + tile->width; x++)
          .          .          .                   .                  .           .                   .          .          .                   {
 62,914,560 ( 1.95%) 0          0                   0                  0           0                   0          0          0                     int tx = x % tile->width;
 62,914,560 ( 1.95%) 0          0          20,971,520 ( 4.42%)         0           0                   0          0          0                     int ty = y % tile->height;
          .          .          .                   .                  .           .                   .          .          .           
104,867,840 ( 3.25%) 1 ( 0.04%) 1 ( 0.04%) 20,981,760 ( 4.43%)         0           0                   0          0          0                     uint32_t * const b_pixel = image_get_pixel(background, x, y);
125,839,360 ( 3.90%) 0          0          20,981,760 ( 4.43%)         0           0                   0          0          0                     uint32_t * const t_pixel = image_get_pixel(tile, tx, ty);
          .          .          .                   .                  .           .                   .          .          .                     rgba_t dst, src;
419,430,400 (12.99%) 2 ( 0.08%) 2 ( 0.09%) 20,971,520 ( 4.42%) 1,310,725 (26.17%)  0                   0          0          0                     RGBA_unpack(dst, *b_pixel);
419,430,400 (12.99%) 1 ( 0.04%) 1 ( 0.04%) 20,971,520 ( 4.42%) 1,310,725 (26.17%) 16 ( 0.77%)          0          0          0                     RGBA_unpack(src, *t_pixel);
 83,886,080 ( 2.60%) 0          0                   0                  0           0                   0          0          0                     RGBA_mults(src, src, tile_alpha);
 83,937,290 ( 2.60%) 0          0              10,250 ( 0.00%)         0           0                   0          0          0                     RGBA_mults(dst, dst, 1.f - tile_alpha);
 83,886,080 ( 2.60%) 0          0                   0                  0           0                   0          0          0                     RGBA_add(dst, dst, src);
314,572,800 ( 9.74%) 1 ( 0.04%) 1 ( 0.04%)          0                  0           0          20,971,520 (17.18%) 0          0                     RGBA_pack(*b_pixel, dst);
          .          .          .                   .                  .           .                   .          .          .                   }
         35 ( 0.00%) 0          0                  35 ( 0.00%)         5 ( 0.00%)  0                   0          0          0           }
          .          .          .                   .                  .           .                   .          .          .           
          .          .          .                   .                  .           .                   .          .          .           
          .          .          .                   .                  .           .                   .          .          .           
          .          .          .                   .                  .           .                   .          .          .           int
          .          .          .                   .                  .           .                   .          .          .           main(int argc, char **argv)
         11 ( 0.00%) 2 ( 0.08%) 2 ( 0.09%)          1 ( 0.00%)         0           0                   7 ( 0.00%) 0          0           {
          2 ( 0.00%) 0          0                   0                  0           0                   0          0          0             if (argc < 4)
          .          .          .                   .                  .           .                   .          .          .               {
          .          .          .                   .                  .           .                   .          .          .                 fprintf(stderr, "usage: %s <infile> <tilefile> <n_repeat> [outfile]\n", argv[0]);
          .          .          .                   .                  .           .                   .          .          .                 fprintf(stderr, "\n  where <infile>, <tilefile> and [outfile] are PNG files.");
          .          .          .                   .                  .           .                   .          .          .                 fprintf(stderr, "\n  <n_repeat> is the number of times the computation should be repeated.");
          .          .          .                   .                  .           .                   .          .          .                 fprintf(stderr, "\n  [outfile] is an optional parameter.\n");
          .          .          .                   .                  .           .                   .          .          .                 return EXIT_FAILURE;
          .          .          .                   .                  .           .                   .          .          .               }
          .          .          .                   .                  .           .                   .          .          .           
          1 ( 0.00%) 0          0                   1 ( 0.00%)         0           0                   0          0          0             const char *infile = argv[1];
          1 ( 0.00%) 0          0                   1 ( 0.00%)         0           0                   0          0          0             const char *tilefile = argv[2];
          .          .          .                   .                  .           .                   .          .          .             long int n_repeat = 0;
          2 ( 0.00%) 0          0                   1 ( 0.00%)         1 ( 0.00%)  0                   1 ( 0.00%) 0          0             const char *outfile = argv[4];
          .          .          .                   .                  .           .                   .          .          .           
          6 ( 0.00%) 0          0                   1 ( 0.00%)         0           0                   2 ( 0.00%) 0          0             n_repeat = strtol(argv[3], NULL, 10);
          5 ( 0.00%) 1 ( 0.04%) 1 ( 0.04%)          1 ( 0.00%)         0           0                   1 ( 0.00%) 0          0             if (errno > 0 || n_repeat == 0)
          .          .          .                   .                  .           .                   .          .          .               {
          .          .          .                   .                  .           .                   .          .          .                 fprintf(stderr, "Could not convert n_repeat argument to integer.\n");
          .          .          .                   .                  .           .                   .          .          .                 return EXIT_FAILURE;
          .          .          .                   .                  .           .                   .          .          .               }
          .          .          .                   .                  .           .                   .          .          .           
          .          .          .                   .                  .           .                   .          .          .             /* Load PNG images */
          .          .          .                   .                  .           .                   .          .          .             struct timespec load_start_time, load_end_time;
          3 ( 0.00%) 0          0                   0                  0           0                   2 ( 0.00%) 0          0             get_time(&load_start_time);
          .          .          .                   .                  .           .                   .          .          .           
          .          .          .                   .                  .           .                   .          .          .             /* Load tile first on purpose, to ensure it is evicted from the caches
          .          .          .                   .                  .           .                   .          .          .              * by the load of the background. Do not change this!
          .          .          .                   .                  .           .                   .          .          .              */
          3 ( 0.00%) 1 ( 0.04%) 0                   0                  0           0                   1 ( 0.00%) 0          0             image_t *tile = image_new_from_pngfile(tilefile);
          2 ( 0.00%) 0          0                   0                  0           0                   0          0          0             if (!tile)
          .          .          .                   .                  .           .                   .          .          .               return EXIT_FAILURE;
          .          .          .                   .                  .           .                   .          .          .           
          3 ( 0.00%) 0          0                   0                  0           0                   1 ( 0.00%) 0          0             image_t *background = image_new_from_pngfile(infile);
          2 ( 0.00%) 1 ( 0.04%) 1 ( 0.04%)          0                  0           0                   0          0          0             if (!background)
          .          .          .                   .                  .           .                   .          .          .               return EXIT_FAILURE;
          .          .          .                   .                  .           .                   .          .          .           
          4 ( 0.00%) 0          0                   0                  0           0                   2 ( 0.00%) 0          0             get_time(&load_end_time);
          .          .          .                   .                  .           .                   .          .          .           
          .          .          .                   .                  .           .                   .          .          .           #if ENABLE_TIMING
          .          .          .                   .                  .           .                   .          .          .             printf("filename,tile filename,load time,tilecomposite time\n");
          .          .          .                   .                  .           .                   .          .          .           #endif /* ENABLE_TIMING */
          .          .          .                   .                  .           .                   .          .          .           
          .          .          .                   .                  .           .                   .          .          .             /* Execute */
         23 ( 0.00%) 1 ( 0.04%) 1 ( 0.04%)          6 ( 0.00%)         0           0                   1 ( 0.00%) 1 ( 0.00%) 0             for (long int Z = 0; Z < n_repeat; Z++)
          .          .          .                   .                  .           .                   .          .          .               {
          .          .          .                   .                  .           .                   .          .          .                 struct timespec start_time, end_time;
          .          .          .                   .                  .           .                   .          .          .           
         10 ( 0.00%) 0          0                   0                  0           0                   5 ( 0.00%) 0          0                 get_time(&start_time);
          .          .          .                   .                  .           .                   .          .          .           
         20 ( 0.00%) 0          0                   5 ( 0.00%)         0           0                   5 ( 0.00%) 0          0                 op_tile_composite(background, tile, 0.2f);
          .          .          .                   .                  .           .                   .          .          .           
         10 ( 0.00%) 0          0                   0                  0           0                   5 ( 0.00%) 0          0                 get_time(&end_time);
          .          .          .                   .                  .           .                   .          .          .           
          .          .          .                   .                  .           .                   .          .          .           #if ENABLE_TIMING
          .          .          .                   .                  .           .                   .          .          .                 /* Output result in CSV for easy processing */
          .          .          .                   .                  .           .                   .          .          .                 /* filename,tile filename,load time,compute time */
         70 ( 0.00%) 1 ( 0.04%) 1 ( 0.04%)         15 ( 0.00%)         0           0                  35 ( 0.00%) 0          0                 printf("%s,%s,%f,%f\n",
          .          .          .                   .                  .           .                   .          .          .                        get_basename(infile), get_basename(tilefile),
          .          .          .                   .                  .           .                   .          .          .                        get_elapsed_ms(&load_end_time, &load_start_time),
          .          .          .                   .                  .           .                   .          .          .                        get_elapsed_ms(&end_time, &start_time));
          .          .          .                   .                  .           .                   .          .          .           #endif /* ENABLE_TIMING */
          .          .          .                   .                  .           .                   .          .          .               }
          .          .          .                   .                  .           .                   .          .          .           
          .          .          .                   .                  .           .                   .          .          .             /* Save result if desired and if applicable */
          1 ( 0.00%) 0          0                   0                  0           0                   0          0          0             int retval = EXIT_SUCCESS;
          2 ( 0.00%) 0          0                   1 ( 0.00%)         0           0                   0          0          0             if (outfile && background && !image_save_as_pngfile(background, outfile))
          .          .          .                   .                  .           .                   .          .          .               retval = EXIT_FAILURE;
          .          .          .                   .                  .           .                   .          .          .           
          3 ( 0.00%) 0          0                   0                  0           0                   2 ( 0.00%) 0          0             image_free(background);
          3 ( 0.00%) 1 ( 0.04%) 1 ( 0.04%)          1 ( 0.00%)         0           0                   1 ( 0.00%) 0          0             image_free(tile);
          .          .          .                   .                  .           .                   .          .          .           
          1 ( 0.00%) 0          0                   0                  0           0                   0          0          0             return retval;
         11 ( 0.00%) 1 ( 0.04%) 1 ( 0.04%)          9 ( 0.00%)         1 ( 0.00%)  0                   0          0          0           }

--------------------------------------------------------------------------------
The following files chosen for auto-annotation could not be found:
--------------------------------------------------------------------------------
  ./string/../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S

--------------------------------------------------------------------------------
Ir                     I1mr        ILmr        Dr                   D1mr               DLmr        Dw                  D1mw       DLmw       
--------------------------------------------------------------------------------
1,908,562,429 (59.10%) 17 ( 0.68%) 16 ( 0.69%) 146,851,973 (30.99%) 2,621,458 (52.34%) 16 ( 0.77%) 20,971,656 (17.18%) 1 ( 0.00%) 0           events annotated

